<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3ecUUA43GCPGKKCkYxRRSA//2Q==
</value>
  </data>
  <metadata name="Matricule.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="marque.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="modele.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="color.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="reserve.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>